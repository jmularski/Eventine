image: node:latest

cache:
  paths:
  - node_modules/

stages:
  - install
  - test
  - build

install_dependencies:
  stage: install
  script:
   - npm install

test:
  stage: test
  variables:
    NODE_ENV: CI
  services:
    - mongo:latest
  script: 
    - npm install
    - npm test

# code_quality:
#   stage: test
#   image: docker:stable
#   variables:
#     DOCKER_DRIVER: overlay2
#   allow_failure: true
#   services:
#     - docker:stable-dind
#   script:
#     - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
#     - docker run
#         --env SOURCE_CODE="$PWD"
#         --volume "$PWD":/code
#         --volume /var/run/docker.sock:/var/run/docker.sock
#         "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
#   artifacts:
#     paths: [gl-code-quality-report.json]

docker:
  stage: build
  image: docker:stable
  services:
    - docker:stable-dind
  variables:
    CONTAINER_TEST_IMAGE: gcr.io/findme4-209120/eventine
    DOCKER_DRIVER: overlay2
  script:
    - npm install
    - docker build -t eventine:latest -f ./docker/Dockerfile .
    - docker tag eventine:latest ${CONTAINER_TEST_IMAGE}
    - docker login -u _json_key -p "$(cat findme4-209120-f13531932f36.json)" https://gcr.io
    - docker push ${CONTAINER_TEST_IMAGE}
  only:
    - master
